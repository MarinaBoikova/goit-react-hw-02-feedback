{"version":3,"sources":["components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Sections/Sections.jsx","components/App/App.jsx","index.js","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","className","s","listStatistics","itemStatistics","String","Notification","message","FeedbackOptions","onLeaveFeedback","listFeedback","itemFeedback","id","onClick","type","Section","title","children","App","state","increasesCounter","evn","setState","prevState","target","countTotalFeedback","countPositiveFeedbackPercentage","Math","ceil","this","React","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"wQA4CeA,EAzCI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,4CACA,qBAAIC,UAAWC,IAAEC,eAAjB,UACE,oBAAIF,UAAWC,IAAEE,eAAjB,SACE,uCACQ,+BAAOR,SAGjB,oBAAIK,UAAWC,IAAEE,eAAjB,SACE,0CACW,+BAAOP,SAGpB,oBAAII,UAAWC,IAAEE,eAAjB,SACE,sCACO,+BAAON,SAGhB,oBAAIG,UAAWC,IAAEE,eAAjB,SACE,wCACS,+BAAOC,OAAON,YAGzB,oBAAIE,UAAWC,IAAEE,eAAjB,SACE,mDACqB,IACnB,iCACoC,QAAjCC,OAAOL,KACJ,IACAK,OAAOL,KAHb,mBC9BGM,EADM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,K,gBCwB3BC,EAtBS,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBACzB,OACE,qBAAIR,UAAWC,IAAEQ,aAAjB,UACE,oBAAIT,UAAWC,IAAES,aAAjB,SACE,wBAAQC,GAAG,OAAOC,QAASJ,EAAiBK,KAAK,SAAjD,oBAIF,oBAAIb,UAAWC,IAAES,aAAjB,SACE,wBAAQC,GAAG,UAAUC,QAASJ,EAAiBK,KAAK,SAApD,uBAIF,oBAAIb,UAAWC,IAAES,aAAjB,SACE,wBAAQC,GAAG,MAAMC,QAASJ,EAAiBK,KAAK,SAAhD,uBCPOC,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,6BAAKD,IACJC,MCEDC,E,4MACJC,MAAQ,CACNvB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPsB,iBAAmB,SAAAC,GACjB,EAAKC,UAAS,SAAAC,GACZ,MAAsB,SAAlBF,EAAIG,OAAOZ,GACN,CAAEhB,KAAM2B,EAAU3B,KAAO,GAEZ,YAAlByB,EAAIG,OAAOZ,GACN,CAAEf,QAAS0B,EAAU1B,QAAU,GAElB,QAAlBwB,EAAIG,OAAOZ,GACN,CAAEd,IAAKyB,EAAUzB,IAAM,QAEhC,EAAK2B,yB,EAGTA,mBAAqB,WAEnB,OADc,EAAKN,MAAMvB,KAAO,EAAKuB,MAAMtB,QAAU,EAAKsB,MAAMrB,K,EAGlE4B,gCAAkC,WAMhC,OAL2BC,KAAKC,KAC7B,EAAKT,MAAMvB,MACT,EAAKuB,MAAMvB,KAAO,EAAKuB,MAAMtB,QAAU,EAAKsB,MAAMrB,KACnD,M,4CAKN,WACE,OACE,qCACG,IACD,cAAC,EAAD,CAASkB,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBP,gBAAiBoB,KAAKT,qBAEzC,cAAC,EAAD,UACiC,IAA9BS,KAAKJ,qBACJ,cAAC,EAAD,CACE1B,MAAO8B,KAAKJ,mBACZ7B,KAAMiC,KAAKV,MAAMvB,KACjBC,QAASgC,KAAKV,MAAMtB,QACpBC,IAAK+B,KAAKV,MAAMrB,IAChBE,mBAAoB6B,KAAKH,kCAG3B,cAAC,EAAD,CAAcnB,QAAQ,kC,GAlDhBuB,IAAMC,WA0DTb,IC3Dfc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,eAAiB,mCAAmC,eAAiB,qC,kBCAvFD,EAAOC,QAAU,CAAC,aAAe,sCAAsC,aAAe,yC","file":"static/js/main.58c60ba5.chunk.js","sourcesContent":["import React from 'react';\r\nimport s from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      <h2>Statistics</h2>\r\n      <ul className={s.listStatistics}>\r\n        <li className={s.itemStatistics}>\r\n          <p>\r\n            Good: <span>{good}</span>\r\n          </p>\r\n        </li>\r\n        <li className={s.itemStatistics}>\r\n          <p>\r\n            Neutral: <span>{neutral}</span>\r\n          </p>\r\n        </li>\r\n        <li className={s.itemStatistics}>\r\n          <p>\r\n            Bad: <span>{bad}</span>\r\n          </p>\r\n        </li>\r\n        <li className={s.itemStatistics}>\r\n          <p>\r\n            Total: <span>{String(total())}</span>\r\n          </p>\r\n        </li>\r\n        <li className={s.itemStatistics}>\r\n          <p>\r\n            Positive feedback:{' '}\r\n            <span>\r\n              {String(positivePercentage()) === 'NaN'\r\n                ? 100\r\n                : String(positivePercentage())}\r\n              %\r\n            </span>\r\n          </p>\r\n        </li>\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","const Notification = ({ message }) => <p>{message}</p>;\r\nexport default Notification;\r\n","import s from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ onLeaveFeedback }) => {\r\n  return (\r\n    <ul className={s.listFeedback}>\r\n      <li className={s.itemFeedback}>\r\n        <button id=\"good\" onClick={onLeaveFeedback} type=\"button\">\r\n          Good\r\n        </button>\r\n      </li>\r\n      <li className={s.itemFeedback}>\r\n        <button id=\"neutral\" onClick={onLeaveFeedback} type=\"button\">\r\n          Neutral\r\n        </button>\r\n      </li>\r\n      <li className={s.itemFeedback}>\r\n        <button id=\"bad\" onClick={onLeaveFeedback} type=\"button\">\r\n          Bad\r\n        </button>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","const Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\nimport Statistics from '../Statistics/Statistics';\nimport Notification from '../Notification/Notification';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\nimport Section from '../Sections/Sections';\n\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  increasesCounter = evn => {\n    this.setState(prevState => {\n      if (evn.target.id === 'good') {\n        return { good: prevState.good + 1 };\n      }\n      if (evn.target.id === 'neutral') {\n        return { neutral: prevState.neutral + 1 };\n      }\n      if (evn.target.id === 'bad') {\n        return { bad: prevState.bad + 1 };\n      }\n      this.countTotalFeedback();\n    });\n  };\n  countTotalFeedback = () => {\n    const total = this.state.good + this.state.neutral + this.state.bad;\n    return total;\n  };\n  countPositiveFeedbackPercentage = () => {\n    const positivePercentage = Math.ceil(\n      (this.state.good /\n        (this.state.good + this.state.neutral + this.state.bad)) *\n        100,\n    );\n    return positivePercentage;\n  };\n\n  render() {\n    return (\n      <>\n        {' '}\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions onLeaveFeedback={this.increasesCounter} />\n        </Section>\n        <Section>\n          {this.countTotalFeedback() !== 0 ? (\n            <Statistics\n              total={this.countTotalFeedback}\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              positivePercentage={this.countPositiveFeedbackPercentage}\n            />\n          ) : (\n            <Notification message=\"There is no feedback\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listStatistics\":\"Statistics_listStatistics__3ceCB\",\"itemStatistics\":\"Statistics_itemStatistics__3M-NI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listFeedback\":\"FeedbackOptions_listFeedback__szKjw\",\"itemFeedback\":\"FeedbackOptions_itemFeedback__ZBL11\"};"],"sourceRoot":""}